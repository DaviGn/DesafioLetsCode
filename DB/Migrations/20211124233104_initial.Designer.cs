// <auto-generated />
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211124233104_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventoryItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Arma",
                            Points = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "Munição",
                            Points = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Água",
                            Points = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Água",
                            Points = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.Rebel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("GalaxyName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("ReportCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rebel");
                });

            modelBuilder.Entity("Domain.Models.RebelInventory", b =>
                {
                    b.Property<int>("RebelId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("RebelId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("RebelInventory");
                });

            modelBuilder.Entity("Domain.Models.RebelInventory", b =>
                {
                    b.HasOne("Domain.Models.InventoryItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Rebel", "Rebel")
                        .WithMany("RebelInventory")
                        .HasForeignKey("RebelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Rebel");
                });

            modelBuilder.Entity("Domain.Models.Rebel", b =>
                {
                    b.Navigation("RebelInventory");
                });
#pragma warning restore 612, 618
        }
    }
}
